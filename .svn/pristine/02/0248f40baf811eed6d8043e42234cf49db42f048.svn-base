"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var router_1 = require('@angular/router');
var dataService_1 = require('../../global-services/dataService');
var _ = require('lodash');
var WorkComponent = (function () {
    function WorkComponent(_route, _dataService, _routeData) {
        this._route = _route;
        this._dataService = _dataService;
        this._routeData = _routeData;
        //use of reactive Form
        this.work = new WorkModel();
    }
    ;
    WorkComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._routeData.params.subscribe(function (work) {
            _this._dataService.fetch('user', +work.id).subscribe(function (workData) {
                if (!_.isEmpty(workData)) {
                    _this.work = workData;
                }
            });
            _this.work.id = +work.id;
        });
    };
    WorkComponent.prototype.saveAndNext = function (model) {
        console.log(model);
        var res = this._dataService.save('work', model.work);
        if (res)
            this._route.navigate(['/address', model.work.id]);
    };
    WorkComponent = __decorate([
        core_1.Component({
            templateUrl: 'app/RoutingComponents/work/work.tpl.html'
        }), 
        __metadata('design:paramtypes', [router_1.Router, dataService_1.DataService, router_1.ActivatedRoute])
    ], WorkComponent);
    return WorkComponent;
}());
exports.WorkComponent = WorkComponent;
var WorkModel = (function () {
    function WorkModel() {
    }
    return WorkModel;
}());
exports.WorkModel = WorkModel;
//# sourceMappingURL=work.Component.js.map